name: Test

on:
  push:
    branches: [ github_actions ]
  pull_request:
    branches: [ github_actions ]

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: setup apt dependencies for Linux
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update
        sudo apt-get install opencl-headers ocl-icd-opencl-dev libpocl2



    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel setuptools
        python -m pip install hdf5 h5py
        python -m pip install ipython ipykernel jupyter
        python -m pip install lxml sphinx
        python -m pip install cython
        python -m pip install mako
        python -m pip install numpy scipy matplotlib docutils "pytest<6" sphinx bumps unittest-xml-reporting tinycc
        python -m pip install periodictable
        python -m pip install sasmodels
        python -m pip install pyqt qt5reactor
        python -m pip install xhtml2pdf
        python -m pip install pytools pyinstaller

    - name: setup pyopencl on Linux + macOS
      if: ${{ matrix.os != 'windows-latest' }}
      run: |
        python -m pip install pyopencl

    - name: setup pyopencl on Windows
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        python -m pip install pytools mako cffi

        choco install opencl-intel-cpu-runtime
        python -m pip install --only-binary=pyopencl --find-links http://www.silx.org/pub/wheelhouse/ --trusted-host www.silx.org pyopencl

#    - name: run pyinstaller on macOS
#      if: ${{ matrix.os == 'macos-latest' }}
#      run: |
#        pyinstaller -y --clean --onefile --windowed --debug sasview_qt5_osx.spec
#
#    - name: run pyinstaller on Linux
#        if: ${{ matrix.os == 'ubuntu-latest' }}
#        run: |
#          pyinstaller -y --clean --onefile --windowed --debug sasview_qt5_centos.spec
#
#    - name: run pyinstaller on Windows
#        if: ${{ matrix.os == 'windows-latest' }}
#        run: |
#          pyinstaller -y --clean --onefile --windowed --debug sasview_qt5_commercial.spec

      #    - uses: actions/upload-artifact@v2
#        with:
#          name: name-of-artifact
#          path: src/dist/windows